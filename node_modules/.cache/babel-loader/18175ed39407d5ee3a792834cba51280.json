{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst defaultState = {\n  enteredValue: \"\",\n  touched: false,\n  valueIsValid: false,\n  hasError: false\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.tye) {\n    case \"VALUE_CHANGED\":\n      return { ...state,\n        enteredValue: action.payload\n      };\n\n    case \"INPUT_BLUR\":\n      return { ...state,\n        touched: true\n      };\n\n    case \"RESET\":\n      return { ...state,\n        enteredValue: \"\",\n        touched: false\n      };\n\n    default:\n      return {\n        enteredValue: \"\",\n        touched: false,\n        valueIsValid: false,\n        hasError: false\n      };\n  }\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [state, dispatch] = useReducer(inputReducer, defaultState);\n  state.valueIsValid = validateValue(state.enteredValue);\n  state.hasError = !state.valueIsValid && state.touched;\n\n  const valueChangedHandler = event => {\n    dispatch({\n      type: \"VALUE_CHANGED\",\n      payload: event.target.value\n    });\n  };\n\n  const InputBlurHandler = event => {\n    dispatch({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    value: state.enteredValue,\n    hasError: state.hasError,\n    valueChangedHandler,\n    InputBlurHandler,\n    reset,\n    isValid: state.valueIsValid\n  };\n};\n\n_s(useInput, \"zEDbosDjpARfUl0vNel/+uYp9FA=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/troias/udemy/project-7/01-starting-project/src/customHooks/useInput.js"],"names":["useReducer","defaultState","enteredValue","touched","valueIsValid","hasError","inputReducer","state","action","tye","payload","useInput","validateValue","dispatch","valueChangedHandler","event","type","target","value","InputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAAUA,UAAV,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,GAAf;AACI,SAAK,eAAL;AAEI,aAAO,EACH,GAAGF,KADA;AAEHL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAFlB,OAAP;;AAKJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHL,QAAAA,YAAY,EAAE,EAFX;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ;AACG,aAAO;AACND,QAAAA,YAAY,EAAE,EADR;AAENC,QAAAA,OAAO,EAAE,KAFH;AAGNC,QAAAA,YAAY,EAAE,KAHR;AAINC,QAAAA,QAAQ,EAAE;AAJJ,OAAP;AArBP;AA4BH,CA7BD;;AA+BA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAGhC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,YAAD,EAAeL,YAAf,CAApC;AAGCM,EAAAA,KAAK,CAACH,YAAN,GAAqBQ,aAAa,CAACL,KAAK,CAACL,YAAP,CAAlC;AACAK,EAAAA,KAAK,CAACF,QAAN,GAAiB,CAACE,KAAK,CAACH,YAAP,IAAuBG,KAAK,CAACJ,OAA9C;;AAED,QAAMW,mBAAmB,GAAIC,KAAD,IAAW;AACnCF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,eADD;AAELN,MAAAA,OAAO,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAFjB,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,gBAAgB,GAAIJ,KAAD,IAAW;AAChCF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMI,KAAK,GAAG,MAAM;AAChBP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,SAAO;AACHE,IAAAA,KAAK,EAAEX,KAAK,CAACL,YADV;AAEHG,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QAFb;AAGHS,IAAAA,mBAHG;AAIHK,IAAAA,gBAJG;AAKHC,IAAAA,KALG;AAMHC,IAAAA,OAAO,EAAEd,KAAK,CAACH;AANZ,GAAP;AASH,CArCD;;GAAMO,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import {  useReducer } from 'react'\r\n\r\nconst defaultState = { \r\n    enteredValue: \"\", \r\n    touched: false, \r\n    valueIsValid: false,\r\n    hasError: false\r\n}\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.tye) {\r\n        case \"VALUE_CHANGED\":\r\n            \r\n            return {\r\n                ...state, \r\n                enteredValue: action.payload\r\n            }\r\n        \r\n        case \"INPUT_BLUR\":\r\n            return {\r\n                ...state, \r\n                touched: true\r\n            }\r\n        case \"RESET\":\r\n            return {\r\n                ...state, \r\n                enteredValue: \"\",\r\n                touched: false\r\n            }\r\n\r\n        default:\r\n           return { \r\n            enteredValue: \"\", \r\n            touched: false, \r\n            valueIsValid: false,\r\n            hasError: false\r\n        }\r\n    }\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n \r\n    const [state, dispatch] = useReducer(inputReducer, defaultState)\r\n \r\n\r\n     state.valueIsValid = validateValue(state.enteredValue)\r\n     state.hasError = !state.valueIsValid && state.touched\r\n\r\n    const valueChangedHandler = (event) => {\r\n        dispatch({ \r\n            type: \"VALUE_CHANGED\", \r\n            payload: event.target.value\r\n        })\r\n    }\r\n\r\n    const InputBlurHandler = (event) => {\r\n        dispatch({ \r\n            type: \"INPUT_BLUR\", \r\n        })\r\n    }\r\n\r\n    const reset = () => { \r\n        dispatch({ \r\n            type: \"RESET\", \r\n        })\r\n    }\r\n      \r\n    return {\r\n        value: state.enteredValue,\r\n        hasError: state.hasError,\r\n        valueChangedHandler,\r\n        InputBlurHandler, \r\n        reset, \r\n        isValid: state.valueIsValid,\r\n       \r\n    }\r\n}\r\n\r\nexport default useInput\r\n"]},"metadata":{},"sourceType":"module"}