{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-7/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"code is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const addInputNameHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim().length > 0) {\n      setEnteredNameIsValid(true);\n      return;\n    }\n\n    setEnteredName(event.target.value);\n    console.log(enteredName);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true); // setEnteredName(event.target.value)\n\n    const enteredValue = nameInputRef.current.value;\n    nameInputRef.current.value = \"\";\n    console.log(enteredValue);\n  };\n\n  const nameInputBlurHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return alert(\"Please enter a name\");\n    }\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \" Your Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: addInputNameHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \" Cannot be empty \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"bm/27lsNsiIXuRMukf2inprCLH4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/troias/udemy/project-7/01-starting-project/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","addInputNameHandler","event","preventDefault","trim","length","target","value","formSubmitHandler","enteredValue","current","nameInputBlurHandler","alert","nameInputIsInvalid","nameInputClasses"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\"\n\nconst SimpleInput = (props) => {\n\n\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState(\"\")\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"code is valid\")\n    }\n  }, [enteredNameIsValid])\n\n  const addInputNameHandler = (event) => {\n    event.preventDefault()\n\n    if (enteredName.trim().length > 0) {\n      setEnteredNameIsValid(true)\n      return\n    }\n\n    setEnteredName(event.target.value)\n    console.log(enteredName)\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault()\n\n    setEnteredNameTouched(true)\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false)\n      return\n    }\n    setEnteredNameIsValid(true)\n\n    // setEnteredName(event.target.value)\n    const enteredValue = nameInputRef.current.value\n    nameInputRef.current.value = \"\"\n    console.log(enteredValue)\n\n  }\n  const nameInputBlurHandler = (event) => {\n    event.preventDefault()\n    setEnteredNameTouched(true)\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false)\n      return alert(\"Please enter a name\")\n    }\n\n  }\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'> Your Name </label>\n        <input ref={nameInputRef} type='text' id='name' onChange={addInputNameHandler} onBlur={nameInputBlurHandler} />\n        {nameInputIsInvalid && <p className={\"error-text\"}> Cannot be empty </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}