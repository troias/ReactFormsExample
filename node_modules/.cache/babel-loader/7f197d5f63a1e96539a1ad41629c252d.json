{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n  const [valid, setFormValid] = useState(\"false\");\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && touched;\n\n  if (enteredValue) {\n    setFormValid(true);\n  }\n\n  const valueChangedHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const InputBlurHandler = event => {\n    setTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    valueChangedHandler,\n    InputBlurHandler,\n    formIsvalid: valid.setEnteredValue\n  };\n};\n\n_s(useInput, \"Wgsf1f8J8FXRf3GYGTobyFtoglA=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/troias/udemy/project-7/01-starting-project/src/customHooks/useInput.js"],"names":["React","useState","useInput","validateValue","enteredValue","setEnteredValue","touched","setTouched","valid","setFormValid","valueIsValid","hasError","valueChangedHandler","event","target","value","InputBlurHandler","formIsvalid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAEhC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,YAAR,IAAwBR,QAAQ,CAAC,OAAD,CAAtC;AAEA,QAAMS,YAAY,GAAGP,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMO,QAAQ,GAAG,CAACD,YAAD,IAAiBJ,OAAlC;;AAEA,MAAIF,YAAJ,EAAkB;AACdK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,QAAMG,mBAAmB,GAAIC,KAAD,IAAW;AACnCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChCN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,SAAO;AACHQ,IAAAA,KAAK,EAAEX,YADJ;AAEHO,IAAAA,QAFG;AAGHC,IAAAA,mBAHG;AAIHI,IAAAA,gBAJG;AAKHC,IAAAA,WAAW,EAAET,KAAK,CAClBH;AANG,GAAP;AAQH,CA7BD;;GAAMH,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    const [enteredValue, setEnteredValue] = useState(\"\")\r\n    const [touched, setTouched] = useState(false)\r\n    const [valid, setFormValid] = useState(\"false\")\r\n\r\n    const valueIsValid = validateValue(enteredValue)\r\n    const hasError = !valueIsValid && touched\r\n\r\n    if (enteredValue) {\r\n        setFormValid(true);\r\n    }\r\n\r\n    const valueChangedHandler = (event) => {\r\n        setEnteredValue(event.target.value)\r\n    }\r\n\r\n    const InputBlurHandler = (event) => {\r\n        setTouched(true)\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        hasError,\r\n        valueChangedHandler,\r\n        InputBlurHandler, \r\n        formIsvalid: valid. \r\n        setEnteredValue\r\n    }\r\n}\r\n\r\nexport default useInput\r\n"]},"metadata":{},"sourceType":"module"}