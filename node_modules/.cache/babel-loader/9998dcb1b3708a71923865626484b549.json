{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n  const [valid, invalid] = useState(\"false\");\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && touched;\n  let formIsvalid = false;\n\n  if (enteredValue) {\n    formIsvalid = true;\n  }\n\n  const valueChangedHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const InputBlurHandler = event => {\n    setTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    valueChangedHandler,\n    InputBlurHandler\n  };\n};\n\n_s(useInput, \"Fvo7s5JriyffwQylWYfnAJOY/Wg=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/troias/udemy/project-7/01-starting-project/src/customHooks/useInput.js"],"names":["React","useState","useInput","validateValue","enteredValue","setEnteredValue","touched","setTouched","valid","invalid","valueIsValid","hasError","formIsvalid","valueChangedHandler","event","target","value","InputBlurHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEC,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAEjC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEK,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,OAAD,CAAjC;AAEA,QAAMS,YAAY,GAAGP,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMO,QAAQ,GAAG,CAACD,YAAD,IAAiBJ,OAAlC;AAEA,MAAIM,WAAW,GAAG,KAAlB;;AAEA,MAAGR,YAAH,EAAiB;AACfQ,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACnCT,IAAAA,eAAe,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFH;;AAIE,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAClCP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIF,SAAO;AACHS,IAAAA,KAAK,EAAEZ,YADJ;AAEHO,IAAAA,QAFG;AAGHE,IAAAA,mBAHG;AAIHI,IAAAA;AAJG,GAAP;AAMH,CA7BA;;GAAMf,Q;;AA+BP,eAAeA,QAAf","sourcesContent":["import React, { useState} from 'react'\r\n\r\n const useInput = (validateValue) => {\r\n\r\n    const [ enteredValue, setEnteredValue ] = useState(\"\")\r\n    const [ touched, setTouched ] = useState(false)\r\n    const [valid, invalid] = useState(\"false\")\r\n\r\n    const valueIsValid = validateValue(enteredValue)\r\n    const hasError = !valueIsValid && touched\r\n    \r\n    let formIsvalid = false\r\n\r\n    if(enteredValue) {\r\n      formIsvalid = true;\r\n    } \r\n\r\n    const valueChangedHandler = (event) => {\r\n        setEnteredValue(event.target.value)\r\n      }\r\n\r\n      const InputBlurHandler = (event) => {\r\n        setTouched(true)\r\n      }\r\n\r\n    return {\r\n        value: enteredValue, \r\n        hasError,\r\n        valueChangedHandler, \r\n        InputBlurHandler\r\n    }\r\n}\r\n\r\nexport default useInput\r\n"]},"metadata":{},"sourceType":"module"}